#todo build and test this stack locally

version: '3'

# from https://www.dabbleofdevops.com/blog/setup-a-mysql-python-docker-dev-stack
# docker-compose build; docker-compose up -d

services:

  # todo, how to add indexes automatically at creation
  db:
    image: mysql:5.7
    restart: always
    environment:   # Set up mysql database name and password
      MYSQL_ROOT_PASSWORD: njtransit
      MYSQL_DATABASE: buses_nj
      MYSQL_USER: njbuswatcher
      MYSQL_PASSWORD: njtransit
      TZ: America/New_York
    ports:
      - 7034:3306 # n.b this is only for external connections
    volumes:
      - bus_database:/var/lib/mysql

  grabber:
    restart: always
    build:
      context: .
    depends_on:
      - db
    volumes:
      - bus_files:/app/data
      - bus_assets:/app/assets
    command:
      # tail -f /dev/null
      /opt/conda/envs/njbuswatcher/bin/python3 /app/acquire.py

  #todo add a traekfik container, and tags that route:
  # nj.buswatcher.org/api to api container
  # nj.buswatcher.org to the streamlit dashboard app

  api:
    restart: always
    build:
      context: .
    volumes:
      - bus_assets:/app/assets
    ports:
      - 7308:80
    environment:
      - FLASK_APP=/app/api.py
      - FLASK_DEBUG=1 #todo change this for deployment
      - 'RUN=flask run --host=0.0.0.0 --port=80'
    command: flask run --host=0.0.0.0 --port=80
    # command: gunicorn -w 1 -b :8000 app:server #todo change this for deployment
    # Infinite loop, to keep it alive, for debugging
    # command: bash -c "while true; do echo 'sleeping...' && sleep 10; done"


#todo replace with steamlit container
#  app:
#    restart: always
#    build:
#      context: .
#    volumes:
#      - bus_assets:/app/assets
#    ports:
#      - 80:8000
##    environment:
##      - FLASK_APP=/app/www-dash.py
##      - FLASK_DEBUG=1 #future change this for deployment
##      - 'RUN=flask run --host=0.0.0.0 --port=80'
#    command: gunicorn -w 1 -b :8000 app:server
#    # Infinite loop, to keep it alive, for debugging
#    # command: bash -c "while true; do echo 'sleeping...' && sleep 10; done"

volumes:
  bus_database:
  bus_files:
  bus_assets:
