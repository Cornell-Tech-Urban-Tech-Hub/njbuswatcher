version: '3.7'

# from https://www.dabbleofdevops.com/blog/setup-a-mysql-python-docker-dev-stack
# docker-compose build; docker-compose up -d

services:
  db:
    image: mysql:5.7
    restart: always
    environment:   # Set up mysql database name and password
      MYSQL_ROOT_PASSWORD: njtransit
      MYSQL_DATABASE: buses_nj
      MYSQL_USER: njbuswatcher
      MYSQL_PASSWORD: njtransit
      TZ: America/New_York
    volumes:
      - bus_database:/var/lib/mysql

  acquire:
    restart: always
    build:
      context: .
      dockerfile: build/acquire/Dockerfile
    depends_on:
      - db
    volumes:
      # - bus_files:/app/data #todo map this to a host folder?
      - ./data:/app/data # bing mount
      - bus_assets:/app/assets
    command:
      # tail -f /dev/null # use to start an exploding container and exec in
      /usr/local/bin/python3 /app/acquire.py

  api:
    build:
      context: .
      dockerfile: ./build/api/Dockerfile
    restart: always
    ports:
      - 80:8080
    volumes:
      - ./data:/app/data

  app:
    build:
      dockerfile: ./build/app/Dockerfile
      context: ./
    ports:
      - '8501:8501'
    volumes:
      - './data:/usr/src/app/data:delegated'
      - './project:/usr/src/app/project:delegated'
    environment:
      - USER_ID=1000
      - GROUP_ID=1000
    #future configure traefik --> njbuswatcher.org/dash (production only)
    command:
      tail -f /dev/null # use to start an exploding container and exec in

  #future add traefik container
  # traefik:

  #  map:
    #future configure traefik --> njbuswatcher.org/ (production only)

  # future add with the dyndns.env from ~/deployments/gandi-livedns
  # future stop the other gandi-livedns stack
  #  dyndns:
  #    image: jbbodart/gandi-livedns
  #    restart: unless-stopped
  #    env_file:
  #      - "dyndns.env"
  #

volumes:
  bus_database:
  # bus_files: # deprecated -- archived responses stored in ./data
  bus_assets:
